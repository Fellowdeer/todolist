{"version":3,"sources":["Buttons.js","ListLine.js","NewTask.js","App.js","serviceWorker.js","index.js"],"names":["MoveUpButton","Button","variant","block","onClick","this","props","React","Component","MoveDownButton","DoneButton","DeleteButton","ListLine","moveMeUp","bind","moveMeDown","deleteMe","makeMeDone","moveUp","index","moveDown","delete","done","styles","task","textDecoration","Row","Col","xs","sm","md","lg","style","text","NewTask","state","value","handleChange","handleSubmit","event","add","setState","target","onSubmit","cols","onChange","App","tasks","moveTaskUp","moveTaskDown","taskDelete","taskDone","addTask","helper","helptasks","length","splice","push","i","list","Container","fluid","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.843581cb.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n\r\nexport class MoveUpButton extends React.Component{\r\n    render(){\r\n      return (<Button variant=\"primary\" block onClick = {this.props.onClick}>up</Button>);\r\n    }\r\n  }\r\n  \r\nexport class MoveDownButton extends React.Component{\r\n    render(){\r\n      return (<Button variant=\"info\" block onClick = {this.props.onClick}>down</Button>);\r\n    }\r\n  }\r\n  \r\nexport class DoneButton extends React.Component{\r\n    render(){\r\n      return (<Button variant=\"success\" block onClick = {this.props.onClick}>Done</Button>);\r\n    }\r\n  }\r\n  \r\nexport class DeleteButton extends React.Component{\r\n    render(){\r\n      return (<Button variant=\"danger\" block onClick = {this.props.onClick}>Delete</Button>);\r\n    }\r\n  }","import React from 'react';\r\nimport {MoveUpButton, MoveDownButton, DeleteButton, DoneButton} \r\n    from './Buttons.js';\r\nimport {Row,Col} from 'react-bootstrap';\r\n\r\nexport class ListLine extends React.Component {\r\n    constructor(props){\r\n      super(props);\r\n      this.moveMeUp = this.moveMeUp.bind(this);\r\n      this.moveMeDown = this.moveMeDown.bind(this);\r\n      this.deleteMe = this.deleteMe.bind(this);\r\n      this.makeMeDone = this.makeMeDone.bind(this);\r\n    }\r\n  \r\n    moveMeUp(){\r\n      this.props.moveUp(this.props.index);\r\n    }\r\n  \r\n    moveMeDown(){\r\n      this.props.moveDown(this.props.index);\r\n    }\r\n  \r\n    deleteMe(){\r\n      this.props.delete(this.props.index);\r\n    }\r\n  \r\n    makeMeDone(){\r\n      this.props.done(this.props.index);\r\n    }\r\n  \r\n    render(){\r\n      var styles;\r\n      if (this.props.task.done === true){\r\n        styles = {textDecoration: 'line-through'}\r\n      }\r\n      return (\r\n        <Row>\r\n          <Col xs='2' sm ='4' md='6' lg='6' style = {styles}>\r\n            {this.props.task.text}\r\n          </Col>\r\n          <Col >\r\n            <MoveUpButton onClick = {this.moveMeUp}/>\r\n          </Col>\r\n          <Col >\r\n            <MoveDownButton onClick = {this.moveMeDown}/>\r\n          </Col>\r\n          <Col >\r\n            <DoneButton onClick = {this.makeMeDone}/>\r\n          </Col>\r\n          <Col >\r\n            <DeleteButton onClick = {this.deleteMe}/>\r\n          </Col>\r\n        </Row>\r\n        );\r\n    }\r\n  \r\n  }","import React from 'react';\r\nimport {Row,Col,Button} from 'react-bootstrap';\r\n\r\nexport class NewTask extends React.Component{\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {value: \"new task here\"};\r\n  \r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n  \r\n    handleSubmit(event){\r\n      this.props.add(this.state.value);\r\n      this.setState({value: \"new task here\"});\r\n    }\r\n  \r\n    handleChange(event){\r\n      this.setState({value: event.target.value})\r\n    }\r\n  \r\n    render(){\r\n      return (\r\n        <div>\r\n          <Row>\r\n            <Col xs='8' sm ='8' md='10' lg='10'>\r\n            <form onSubmit={this.handleSubmit}>\r\n              <label>\r\n                <textarea cols=\"50\"    value={this.state.value} onChange={this.handleChange} />\r\n              </label>\r\n            </form>\r\n            </Col>\r\n            <Col xs='4' sm ='4' md='2' lg='2'>\r\n              <Button variant=\"light\" onClick = {this.handleSubmit}>Add Task</Button>\r\n            </Col>\r\n          </Row>\r\n        </div>);\r\n        \r\n    }\r\n  }","import React from 'react';\nimport {Container} from 'react-bootstrap';\nimport {ListLine} from './ListLine.js';\nimport {NewTask} from './NewTask.js';\n\n\n\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      tasks: [{text: \"testask1\", done: false},{text: \"testask2\", done: false},\n    {text: \"testask3\", done: false},{text: \"testask4\", done: false}]\n    }\n    this.moveTaskUp = this.moveTaskUp.bind(this);\n    this.moveTaskDown = this.moveTaskDown.bind(this);\n    this.taskDelete = this.taskDelete.bind(this);\n    this.taskDone = this.taskDone.bind(this);\n    this.addTask = this.addTask.bind(this);\n  }\n\n  moveTaskUp(index){\n    var helper;\n    var helptasks = this.state.tasks;\n    if (index > 0) {\n      helper = helptasks[index-1];\n      helptasks[index-1] = helptasks[index];\n      helptasks[index] = helper;\n      this.setState({tasks: helptasks});\n    }\n  }\n\n  moveTaskDown(index){\n    var helper;\n    var helptasks = this.state.tasks;\n    if (index < (helptasks.length-1)) {\n      helper = helptasks[index+1];\n      helptasks[index+1] = helptasks[index];\n      helptasks[index] = helper;\n      this.setState({tasks: helptasks});\n    }\n  }\n\n  taskDone(index){\n    var helptasks = this.state.tasks;\n    if (helptasks[index].done === false){\n      helptasks[index].done = true\n    }\n    else {\n      helptasks[index].done = false\n    }\n\n    this.setState({tasks: helptasks});\n\n  }\n\n  taskDelete(index){\n      var helptasks = this.state.tasks;\n      helptasks.splice(index,1);\n      this.setState({tasks: helptasks});\n  }\n\n  addTask(text){\n    var helptasks = this.state.tasks;\n    helptasks.push({text: text, done: false});\n    this.setState({tasks: helptasks});\n  }\n\n  render(){\n    var list = [];\n    var i;\n    for (i = 0; i < this.state.tasks.length; i++) {\n        list.push(<ListLine\n          index = {i}\n          task = {this.state.tasks[i]}\n          moveUp = {this.moveTaskUp}\n          moveDown = {this.moveTaskDown}\n          delete = {this.taskDelete}\n          done = {this.taskDone}\n          />);\n      }\n    return (\n      <Container fluid>\n      <ul>{list}</ul>\n      <NewTask add = {this.addTask}/>\n      </Container>);\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}